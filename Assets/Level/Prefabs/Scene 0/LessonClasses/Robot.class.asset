%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 833dfec0ad3e4becbc04e3739d12c9dc, type: 3}
  m_Name: Robot.class
  m_EditorClassIdentifier: 
  className: Robot.class
  classSource: "public class Robot : MonoBehaviour, EVA\r\n{\r\n    // Hey, Atlas
    here! This is what's know as a 'class'. \r\n    // Think of it as your robot's
    blueprint.\r\n    // You can use this blueprint to make yourself a robot! \r\n   
    // I have restricted access to this file for now,\r\n    // as you don't need
    to change anything yet.\r\n\r\n\r\n    // Robot Parts (We'll talk about them
    later...)\r\n    public Head Head;\r\n    public Body Body;\r\n    public Arm
    LeftArm;\r\n    public Arm RightArm;\r\n    public Leg LeftLeg;\r\n    public
    Leg RightLeg;\r\n    private Color\r\n\r\n    // This is a method, basically
    a move or function your Robot can do.\r\n    // You can tell it's a method by
    looking at it's name: \r\n    // Robot(). Every function has a () at the end,\r\n   
    // where you can define parameters, or inputs your method needs to work. \r\n   
    // In this case it's a constructor, a method that can create a new object from
    a class.\r\n    // Click on the Main.class to continue, \r\n    // after making
    yourself familiar with this class, especially the Robot() method.\r\n    public
    Robot(Color32 Color)\r\n    {\r\n        _color = Color; \r\n    }\r\n}"
  interactable: 0
